// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/domain/interfaces/repository.go

// Package interfaces is a generated GoMock package.
package interfaces

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/scyanh/crawler/pkg/domain/entities"
)

// MockIMemoryItemRepository is a mock of IMemoryItemRepository interface.
type MockIMemoryItemRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIMemoryItemRepositoryMockRecorder
}

// MockIMemoryItemRepositoryMockRecorder is the mock recorder for MockIMemoryItemRepository.
type MockIMemoryItemRepositoryMockRecorder struct {
	mock *MockIMemoryItemRepository
}

// NewMockIMemoryItemRepository creates a new mock instance.
func NewMockIMemoryItemRepository(ctrl *gomock.Controller) *MockIMemoryItemRepository {
	mock := &MockIMemoryItemRepository{ctrl: ctrl}
	mock.recorder = &MockIMemoryItemRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMemoryItemRepository) EXPECT() *MockIMemoryItemRepositoryMockRecorder {
	return m.recorder
}

// GetURLs mocks base method.
func (m *MockIMemoryItemRepository) GetURLs() map[string]bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURLs")
	ret0, _ := ret[0].(map[string]bool)
	return ret0
}

// GetURLs indicates an expected call of GetURLs.
func (mr *MockIMemoryItemRepositoryMockRecorder) GetURLs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURLs", reflect.TypeOf((*MockIMemoryItemRepository)(nil).GetURLs))
}

// HasBeenVisited mocks base method.
func (m *MockIMemoryItemRepository) HasBeenVisited(url entities.Item) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HasBeenVisited", url)
	ret0, _ := ret[0].(bool)
	return ret0
}

// HasBeenVisited indicates an expected call of HasBeenVisited.
func (mr *MockIMemoryItemRepositoryMockRecorder) HasBeenVisited(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HasBeenVisited", reflect.TypeOf((*MockIMemoryItemRepository)(nil).HasBeenVisited), url)
}

// MarkAsVisited mocks base method.
func (m *MockIMemoryItemRepository) MarkAsVisited(url entities.Item) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "MarkAsVisited", url)
}

// MarkAsVisited indicates an expected call of MarkAsVisited.
func (mr *MockIMemoryItemRepositoryMockRecorder) MarkAsVisited(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MarkAsVisited", reflect.TypeOf((*MockIMemoryItemRepository)(nil).MarkAsVisited), url)
}
